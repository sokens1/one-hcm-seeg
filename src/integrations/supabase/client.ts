// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';

let SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string | undefined;
let SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY as string | undefined;

// Normalize and validate envs early to avoid confusing 500s
if (typeof SUPABASE_URL === 'string') {
  SUPABASE_URL = SUPABASE_URL.replace(/\/$/, ''); // trim trailing slash
}

if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  // Surface a clear error during development
  console.error('[Supabase] Missing envs:', {
    VITE_SUPABASE_URL: SUPABASE_URL,
    VITE_SUPABASE_ANON_KEY: SUPABASE_PUBLISHABLE_KEY ? `${SUPABASE_PUBLISHABLE_KEY.slice(0, 6)}...` : undefined,
  });
  
  // En mode test, utiliser des valeurs par défaut pour éviter les erreurs
  if (process.env.NODE_ENV === 'test') {
    console.warn('[Supabase] Using test defaults for missing environment variables');
    SUPABASE_URL = SUPABASE_URL || 'https://test.supabase.co';
    SUPABASE_PUBLISHABLE_KEY = SUPABASE_PUBLISHABLE_KEY || 'test-key';
  } else {
    throw new Error('Supabase env variables are missing. Check VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY in your .env');
  }
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  // Optimisations pour réduire la charge IO
  realtime: {
    params: {
      eventsPerSecond: 2, // Limiter les événements en temps réel
    },
  },
  global: {
    headers: {
      'X-Client-Info': 'talent-flow-optimized',
    },
  },
});
