#!/bin/bash

echo "üöÄ D√©ploiement de la solution CORS avec proxy Vercel..."

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "src/integrations/azure-container-apps-api.ts" ]; then
    echo "‚ùå Erreur : Fichier azure-container-apps-api.ts non trouv√©"
    echo "Assurez-vous d'√™tre dans le r√©pertoire racine du projet"
    exit 1
fi

echo "üìã Configuration actuelle :"
echo "  ‚Ä¢ Proxy Vercel : ‚úÖ ACTIV√â"
echo "  ‚Ä¢ URL de production : /api/rh-eval-proxy"
echo "  ‚Ä¢ Fallback automatique : ‚ùå D√âSACTIV√â"
echo "  ‚Ä¢ Donn√©es r√©elles : ‚úÖ ACTIV√âES"

echo ""
echo "üîß Construction du projet..."
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ Construction r√©ussie"
    echo ""
    echo "üåê D√©ploiement sur Vercel..."
    
    # V√©rifier si Vercel CLI est install√©
    if ! command -v vercel &> /dev/null
    then
        echo "‚ö†Ô∏è Vercel CLI n'est pas install√©."
        echo "Installez-le avec : npm install -g vercel"
        echo "Puis connectez-vous avec : vercel login"
        echo "Puis d√©ployez avec : vercel deploy --prod"
        exit 1
    fi
    
    # D√©ployer sur Vercel
    vercel deploy --prod --confirm
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "üéâ D√©ploiement r√©ussi !"
        echo ""
        echo "‚úÖ Votre application est maintenant configur√©e pour :"
        echo "  ‚Ä¢ Utiliser le proxy Vercel pour contourner CORS"
        echo "  ‚Ä¢ Obtenir des donn√©es r√©elles de l'API Azure Container Apps"
        echo "  ‚Ä¢ Fonctionner sans fallback automatique"
        echo ""
        echo "üß™ Testez maintenant l'√©valuation automatique en production !"
    else
        echo "‚ùå Erreur lors du d√©ploiement Vercel"
        echo "V√©rifiez les logs ci-dessus pour plus de d√©tails"
        exit 1
    fi
else
    echo "‚ùå Erreur lors de la construction"
    exit 1
fi

echo ""
echo "üèÅ D√©ploiement termin√© !"
