# Script de diagnostic complet pour le syst√®me d'email
# Ex√©cutez ce script pour identifier tous les probl√®mes potentiels

Write-Host "üîç DIAGNOSTIC COMPLET DU SYST√àME D'EMAIL" -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Cyan
Write-Host ""

# 1. V√©rification de Supabase CLI
Write-Host "1Ô∏è‚É£ V√©rification de Supabase CLI..." -ForegroundColor Yellow
try {
    $supabaseVersion = supabase --version
    Write-Host "‚úÖ Supabase CLI install√©: $supabaseVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Supabase CLI non install√© ou non accessible" -ForegroundColor Red
    Write-Host "   Installez-le via: npm install -g supabase" -ForegroundColor Red
    exit 1
}

# 2. V√©rification de la connexion au projet
Write-Host ""
Write-Host "2Ô∏è‚É£ V√©rification de la connexion au projet..." -ForegroundColor Yellow
try {
    $projectStatus = supabase status
    Write-Host "‚úÖ Projet Supabase connect√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Projet Supabase non connect√©" -ForegroundColor Red
    Write-Host "   V√©rifiez que vous √™tes dans le bon r√©pertoire" -ForegroundColor Red
}

# 3. V√©rification des secrets
Write-Host ""
Write-Host "3Ô∏è‚É£ V√©rification des secrets Supabase..." -ForegroundColor Yellow
try {
    $secrets = supabase secrets list
    Write-Host "‚úÖ Secrets r√©cup√©r√©s:" -ForegroundColor Green
    
    if ($secrets -match "RESEND_API_KEY") {
        Write-Host "   ‚úÖ RESEND_API_KEY configur√©" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå RESEND_API_KEY manquant" -ForegroundColor Red
    }
    
    if ($secrets -match "FROM_EMAIL") {
        Write-Host "   ‚úÖ FROM_EMAIL configur√©" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå FROM_EMAIL manquant" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Impossible de r√©cup√©rer les secrets" -ForegroundColor Red
}

# 4. V√©rification des fonctions
Write-Host ""
Write-Host "4Ô∏è‚É£ V√©rification des fonctions Supabase..." -ForegroundColor Yellow
try {
    $functions = supabase functions list
    Write-Host "‚úÖ Fonctions r√©cup√©r√©es:" -ForegroundColor Green
    
    if ($functions -match "send_application_confirmation") {
        Write-Host "   ‚úÖ send_application_confirmation active" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå send_application_confirmation inactive" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Impossible de r√©cup√©rer les fonctions" -ForegroundColor Red
}

# 5. Test de la fonction directement
Write-Host ""
Write-Host "5Ô∏è‚É£ Test direct de la fonction d'email..." -ForegroundColor Yellow
Write-Host "   Envoi d'un email de test..." -ForegroundColor Gray

$testPayload = @{
    to = "test@example.com"
    firstName = "Test"
    jobTitle = "Test Poste"
    applicationId = "TEST-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
} | ConvertTo-Json

try {
    $testResult = supabase functions invoke send_application_confirmation --body $testPayload
    Write-Host "‚úÖ Test de fonction r√©ussi" -ForegroundColor Green
    Write-Host "   R√©ponse: $testResult" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Test de fonction √©chou√©" -ForegroundColor Red
    Write-Host "   Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# 6. V√©rification des logs r√©cents
Write-Host ""
Write-Host "6Ô∏è‚É£ V√©rification des logs r√©cents..." -ForegroundColor Yellow
try {
    Write-Host "   R√©cup√©ration des logs de la derni√®re heure..." -ForegroundColor Gray
    $logs = supabase functions logs send_application_confirmation --since 1h
    if ($logs) {
        Write-Host "‚úÖ Logs disponibles:" -ForegroundColor Green
        Write-Host $logs -ForegroundColor Gray
    } else {
        Write-Host "‚ÑπÔ∏è Aucun log r√©cent trouv√©" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Impossible de r√©cup√©rer les logs" -ForegroundColor Red
}

# 7. V√©rification de la configuration Resend
Write-Host ""
Write-Host "7Ô∏è‚É£ V√©rification de la configuration Resend..." -ForegroundColor Yellow
Write-Host "   V√©rifiez manuellement:" -ForegroundColor Gray
Write-Host "   - Votre cl√© API est valide sur https://resend.com/emails" -ForegroundColor Gray
Write-Host "   - Votre domaine est configur√© et v√©rifi√©" -ForegroundColor Gray
Write-Host "   - Votre compte n'est pas en mode test" -ForegroundColor Gray

# 8. Recommandations
Write-Host ""
Write-Host "8Ô∏è‚É£ RECOMMANDATIONS" -ForegroundColor Cyan
Write-Host "==================" -ForegroundColor Cyan

Write-Host "üìß Pour tester l'email:" -ForegroundColor Yellow
Write-Host "   1. Allez sur votre page d'accueil" -ForegroundColor White
Write-Host "   2. Utilisez la section 'Test d'Envoi d'Email'" -ForegroundColor White
Write-Host "   3. Entrez votre email personnel" -ForegroundColor White
Write-Host "   4. Cliquez sur 'Envoyer l'Email de Test'" -ForegroundColor White

Write-Host ""
Write-Host "üîß Si l'email ne fonctionne toujours pas:" -ForegroundColor Yellow
Write-Host "   1. V√©rifiez vos logs Supabase" -ForegroundColor White
Write-Host "   2. Testez votre cl√© API Resend directement" -ForegroundColor White
Write-Host "   3. V√©rifiez votre dossier spam" -ForegroundColor White
Write-Host "   4. Contactez le support Resend si n√©cessaire" -ForegroundColor White

Write-Host ""
Write-Host "üéØ DIAGNOSTIC TERMIN√â" -ForegroundColor Cyan
Write-Host "=====================" -ForegroundColor Cyan
Write-Host "Testez maintenant l'email depuis votre page d'accueil !" -ForegroundColor Green
