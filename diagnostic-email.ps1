# üîç Script de Diagnostic Email - SEEG Talent Flow (PowerShell)
# Ce script diagnostique automatiquement les probl√®mes d'envoi d'email

Write-Host "üîç Diagnostic du syst√®me d'envoi d'email SEEG..." -ForegroundColor Green
Write-Host "==================================================" -ForegroundColor Green

# Fonction pour afficher les r√©sultats
function Write-Result {
    param(
        [bool]$Success,
        [string]$Message
    )
    
    if ($Success) {
        Write-Host "‚úÖ $Message" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $Message" -ForegroundColor Red
    }
}

Write-Host "üìã √âtape 1 : V√©rification de la configuration Supabase..." -ForegroundColor Blue

# V√©rifier si Supabase CLI est install√©
try {
    $supabaseVersion = supabase --version 2>$null
    if ($supabaseVersion) {
        Write-Result $true "Supabase CLI install√©"
        Write-Host "   Version : $supabaseVersion" -ForegroundColor Gray
    } else {
        Write-Result $false "Supabase CLI non install√©"
        Write-Host "Installez-le avec : npm install -g supabase" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Result $false "Supabase CLI non install√©"
    Write-Host "Installez-le avec : npm install -g supabase" -ForegroundColor Yellow
    exit 1
}

# V√©rifier la connexion Supabase
Write-Host "üîê V√©rification de la connexion Supabase..." -ForegroundColor Cyan
try {
    $status = supabase status 2>$null
    if ($status) {
        Write-Result $true "Connect√© √† Supabase"
    } else {
        Write-Result $false "Non connect√© √† Supabase"
        Write-Host "Connectez-vous avec : supabase login" -ForegroundColor Yellow
        exit 1
    }
} catch {
    Write-Result $false "Non connect√© √† Supabase"
    Write-Host "Connectez-vous avec : supabase login" -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üîß √âtape 2 : V√©rification des secrets..." -ForegroundColor Blue

# V√©rifier les secrets
Write-Host "üîë V√©rification de la cl√© API Resend..." -ForegroundColor Cyan
try {
    $secrets = supabase secrets list 2>$null
    $resendKey = $secrets | Select-String "RESEND_API_KEY" | ForEach-Object { $_.ToString().Split('=')[1] }
    
    if ($resendKey) {
        Write-Result $true "Cl√© API Resend configur√©e"
        Write-Host "   Cl√© : $($resendKey.Substring(0, [Math]::Min(10, $resendKey.Length)))..." -ForegroundColor Gray
    } else {
        Write-Result $false "Cl√© API Resend non configur√©e"
        Write-Host "   Configuration avec : supabase secrets set RESEND_API_KEY=re_3HgzKBbW_Fu6zJZfuthDmfwXYys6bk4hK" -ForegroundColor Yellow
    }
} catch {
    Write-Result $false "Impossible de v√©rifier les secrets"
}

Write-Host "üìß V√©rification de l'email d'exp√©dition..." -ForegroundColor Cyan
try {
    $fromEmail = $secrets | Select-String "FROM_EMAIL" | ForEach-Object { $_.ToString().Split('=')[1] }
    
    if ($fromEmail) {
        Write-Result $true "Email d'exp√©dition configur√©"
        Write-Host "   Email : $fromEmail" -ForegroundColor Gray
    } else {
        Write-Result $false "Email d'exp√©dition non configur√©"
        Write-Host "   Configuration avec : supabase secrets set FROM_EMAIL=`"SEEG Recrutement <support@seeg-talentsource.com>`"" -ForegroundColor Yellow
    }
} catch {
    Write-Result $false "Impossible de v√©rifier l'email d'exp√©dition"
}

Write-Host ""
Write-Host "üöÄ √âtape 3 : V√©rification des fonctions..." -ForegroundColor Blue

# V√©rifier les fonctions d√©ploy√©es
Write-Host "üîç V√©rification de la fonction d'envoi d'email..." -ForegroundColor Cyan
try {
    $functions = supabase functions list 2>$null
    $functionStatus = $functions | Select-String "send_application_confirmation"
    
    if ($functionStatus) {
        Write-Result $true "Fonction send_application_confirmation d√©ploy√©e"
        Write-Host "   Statut : $functionStatus" -ForegroundColor Gray
    } else {
        Write-Result $false "Fonction send_application_confirmation non d√©ploy√©e"
        Write-Host "   D√©ploiement avec : supabase functions deploy send_application_confirmation" -ForegroundColor Yellow
    }
} catch {
    Write-Result $false "Impossible de v√©rifier les fonctions"
}

Write-Host ""
Write-Host "üìä √âtape 4 : V√©rification des logs..." -ForegroundColor Blue

# V√©rifier les logs r√©cents
Write-Host "üìã R√©cup√©ration des logs r√©cents..." -ForegroundColor Cyan
Write-Host "   Logs des derni√®res 24h :" -ForegroundColor Gray
try {
    $logs = supabase functions logs send_application_confirmation --since 24h 2>$null
    if ($logs) {
        $logs | Select-Object -First 20 | ForEach-Object { Write-Host "   $_" -ForegroundColor Gray }
    } else {
        Write-Host "   Aucun log trouv√©" -ForegroundColor Yellow
    }
} catch {
    Write-Host "   Impossible de r√©cup√©rer les logs" -ForegroundColor Red
}

Write-Host ""
Write-Host "üß™ √âtape 5 : Test de la fonction..." -ForegroundColor Blue

# Demander l'email de test
$testEmail = Read-Host "üìß Entrez votre email pour tester l'envoi"

if ($testEmail) {
    Write-Host "üß™ Test d'envoi d'email..." -ForegroundColor Cyan
    
    # Test avec Invoke-WebRequest (PowerShell natif)
    Write-Host "   Test avec PowerShell..." -ForegroundColor Gray
    Write-Host "   Ex√©cutez manuellement :" -ForegroundColor Yellow
    Write-Host "   Invoke-WebRequest -Uri '[VOTRE_URL_SUPABASE]/functions/v1/send_application_confirmation' -Method POST -ContentType 'application/json' -Body '{\"to\": \"$testEmail\", \"firstName\": \"Test\", \"jobTitle\": \"Test\"}'" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üìã R√©sum√© du diagnostic..." -ForegroundColor Blue

# R√©sum√© des v√©rifications
Write-Host "üîç R√©sum√© des v√©rifications :" -ForegroundColor Cyan
Write-Host "   - Supabase CLI : $(if (Get-Command supabase -ErrorAction SilentlyContinue) { '‚úÖ Install√©' } else { '‚ùå Non install√©' })" -ForegroundColor Gray
Write-Host "   - Connexion Supabase : $(if ($status) { '‚úÖ Connect√©' } else { '‚ùå Non connect√©' })" -ForegroundColor Gray
Write-Host "   - Cl√© API Resend : $(if ($resendKey) { '‚úÖ Configur√©e' } else { '‚ùå Non configur√©e' })" -ForegroundColor Gray
Write-Host "   - Email d'exp√©dition : $(if ($fromEmail) { '‚úÖ Configur√©' } else { '‚ùå Non configur√©' })" -ForegroundColor Gray
Write-Host "   - Fonction d√©ploy√©e : $(if ($functionStatus) { '‚úÖ D√©ploy√©e' } else { '‚ùå Non d√©ploy√©e' })" -ForegroundColor Gray

Write-Host ""
Write-Host "üöÄ Solutions recommand√©es :" -ForegroundColor Yellow

if (-not $resendKey) {
    Write-Host "   1. Configurer la cl√© API : supabase secrets set RESEND_API_KEY=re_3HgzKBbW_Fu6zJZfuthDmfwXYys6bk4hK" -ForegroundColor Yellow
}

if (-not $fromEmail) {
    Write-Host "   2. Configurer l'email : supabase secrets set FROM_EMAIL=`"SEEG Recrutement <support@seeg-talentsource.com>`"" -ForegroundColor Yellow
}

if (-not $functionStatus) {
    Write-Host "   3. D√©ployer la fonction : supabase functions deploy send_application_confirmation" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéØ Pour une solution automatique, ex√©cutez : .\deploy-email.ps1" -ForegroundColor Green
Write-Host ""
Write-Host "üìû Support : support@seeg-talentsource.com | +241 076402886" -ForegroundColor Cyan
